Completed + canceled tasks:
===========================
-Fix bug with missing line space between tasks. *
-Add validation that if source file is empty - Throw error. *
-If contains "הושענא רבה" change to "ערב חג סוכות שני". *
-Replace all "א דחוה"מ." to "א' דחוה"מ." *
-Re-number errors. *
-Add death dates. *
-Convert in all places from all versions of canceled keyword to 'Canceled' keyword. *
-Add in all places 'name.model' to all models. *
-Check that in all places the name of the file includes the name of tha parent directory. For example: name.model inside 'models' directory. *
-Don't forget to do the same rename logic for all the enums in the project. *
-Change in all places the config from 'misc/backup' to 'misc/backups' directory. *
-Recheck the service expiration logic - Verify it works. *
-Change all (where it's possible) from 'console.log' to 'logUtils.log'. *
-Take the latest settings from '.vscode/settings.json' and implement them. *
-Change in all places that globalUtils will be on top. *
-Replace the 'getCurrentDate' method with the updated one from the 'udemy-courses' project. *
-Copy the '.eslintignore' file from the 'udemy-courses' project. *
-Add to the 'package.json' file (below the 'description' field) the 'repository' field: *
"repository": { *
  "type": "git", *
  "url": "git://github.com/username/repository.git" *
} *
-Add the following keywords to the 'package.json' file: 'nodejs javascript events calendar days'. *
-Update packages + Recreate package-lock.json. *
-Clear unused enums and make sure all in used really exists. *
-Remove the 'destination' parameter in the 'filterDirectories' method + Verify that backup still works. *
-Rename and check: countLimitService.countLimitDataModel.millisecondsSendEmailDelayCount. *
-Check and reset the '.vscode/settings.json' by 'C:/Or/Web/auto-packages-updater/auto-packages-updater/.vscode/settings.json' + *
 Format all documents and re-add 'cSpell.words' all the words + add the 'cSpell.ignorePaths'. *
-In validation file path (probably a JSON file) there is a 'Expected a number' comment, *
need to fix it (take the comment from the auto-packages-updater project). *
-Add more static events: 4 july United States independence day, black friday, 6/6 normandy. *
-Add dynamic logic to calculate black friday - Canceled. *
-Add logic to get US events from different URLs. *
-Add friday the 13th logic. *
-Convert 'removeLastCharacter' to use 'removeLastCharacters'. *
-Make sure to have space between /* cSpell:disable */ in the 'INSTRUCTIONS.md' file. *
-Fix general functions logic. *
-Make sure to fix the grammar mistake in the 'enum.utils.js' file (an enum-like object).
-In the 'README.md' file, fix in all places to 'In the terminal'. *
-Make sure that all places 'this.exit' function - Need to be 'await this.exit'. *
-Search for 'async ' and create a list of functions/methods, and make sure that all calls have await. *
-Scan all files for spell mistakes with the 'files-spell-checker' project. *
-In the 'package.json' file change to 'private: false'.
-Make sure all switch-case have curly braces. *
-Remove code comments to a backup TXT file. *
-Remove the duplicate empty lines: \n\s*\n\s*\n *
-Remove the first empty line: ^(?<![\s])\n *
-Remove the last empty line: \n\s*$(?!\n) *
-Detect all comments without a dot at the end: ^// .*(?<!\.)$ *
-Format all documents. *
-Verify all works well. *
-Fix TXT files spell mistakes via Gmail. *
-Move all complete tasks from here to complete_tasks.txt. *
-Upload to GitHub. *
-Backup to iOmega. *
-Comments: Change 'validateEnumData' to 'data'. *
-Remove the 'await' from 'await fileUtils.createDirectory(value);'. *
-In settings.js convert utils path to index, and check if it still works. *
-Move all complete tasks from here to complete_tasks.txt. *
-Upload to GitHub. *
-Backup to iOmega. *
-Fix TXT files spell mistakes via Gmail. *
-Format all documents. *
-Verify all works well. *
-Check 'let' needs to be converted to 'const'. *
-Check places to change from simple parameters with dynamic objects to classes. *
-Make sure all comments '//' have: 1. space 2. ends with a dot. *
-Make sure 'id' => 'Id', 'url' => 'URL', 'api' => 'API'. *
-Make sure spaces in all files between bottom, need to fix cases like this: *
} *
module.exports *
} *
export default *
-Remove duplicate import/require (convert to index.js if possible). *
-Sort alphabetically all the imports/requires by https://alphabetizer.flap.tv/. *
-Sort alphabetically all the imports/requires: external packages, settings, (containers, components, store, assert) data, models, enums, services, utils. *
-File extensions should be upper case: JSON, TXT, etc. *
-Remove duplicate empty lines: \n\s*\n\s*\n *
-Remove last empty line: \n\s*$(?!\n) *
-Detect all comments without a dot at the end: ^// .*(?<!\.)$ *
-Do all the 'ToDo' tasks. *
-Change weekend tasks to a specific day by a number - Canceled. *
-Add saturday task to the example - Canceled. *
-Update the README.MD file - Canceled. *
-Remove code comments to a backup TXT file - Canceled. *
-Convert " to ' in the relevant places - Canceled. *
-Remove all 'debugger' keywords - Canceled. *
-Place an example of structure 'event-dates-2021.txt' file in the misc/examples directory - Canceled. *
-Edit the following files: README.md, INSTRUCTIONS.md, package.json - Canceled. *
-Add example TXT file to the 'misc/examples' directory - Canceled. *
-Update packages + Recreate package-lock.json - Canceled. *
-Recheck error numbers in error_index.txt - Canceled. *
-Remove code comments to a backup TXT file. *
-Convert " to ' in the relevant places. *
-Remove all 'debugger' keywords. *
-Place an example of structure 'event-dates-2021.txt' file in the misc/examples directory. *
-Edit the following files: README.md, INSTRUCTIONS.md, package.json. *
-Add example TXT file to the 'misc/examples' directory. *
-Update packages + Recreate package-lock.json. *
-Add script to validate and mark a TXT file - Each task must start with a '-' character and ends with a * character. *
-The script will log to the console the tasks that failed to be validated. *
-Convert the daily tasks to a model with a toggle option and task type (DAILY/WEEKEND) fields. *
-Add weekend tasks + toggle option. *
-Add functions for '\n' and '\r' keywords. *
-Move all separator characters to a separate service. *
-Rename the file 'EventsDates-2021.txt' to 'event-dates-2021.txt'. *
-Backup and rearrange the original document. *
-Edit the 'event-dates-2021.txt' TXT file to have symbols of start and end of *
contracts, birthdays, and all other texts up to the start of the event dates. *
-Take the structure from the 'file-spell-checker' project. *
-Clear the unneeded code. *
-Generate all the days in the year. *
-Go to the website and get all the holidays. *
-Based on an existing TXT file, do a copy of the event dates TXT file to the sources directory. *
-Clear the dist directory each run. *
-Validates the sources directory (not included in all git and backup settings). *
-Validate the given year, the source to copy, that the internet is working, and that the site is working. *
-Add all events by getting html content of 'https://calendar.2net.co.il/annual-calendar.aspx?year=2021'. *
-Add for each day of expiration date, or birthday, if year of birth is included. *
-Create a new file based on a given year with all days. *
-Log each day with static lines that repeat itself every day. *
-Add validation of the holidays calendar website. *
-Add static events from OSR calendar. *